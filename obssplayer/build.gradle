apply plugin: 'com.android.library'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.androidCompileSdkVersion

    defaultConfig {
        minSdkVersion globalConfiguration.androidMinSdkVersion
        targetSdkVersion globalConfiguration.androidTargetSdkVersion
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions -DGL_GLEXT_PROTOTYPES -D__ANDROID_BUILD__"
                cFlags "-Wall -DGL_GLEXT_PROTOTYPES=1 -D__ANDROID_BUILD__"
                arguments "-DANDROID_STL=stlport_static"
//                "-DANDROID_TOOLCHAIN=g++"//clang（默认）和gcc（已经过期）
//                            "-DANDROID_PLATFORM=android-15"
//                            "-DANDROID_ARM_MODE=arm"
                abiFilters 'armeabi-v7a'
            }
        }
        ndk {
            abiFilters 'armeabi-v7a'
        }
        sourceSets {
            main {
                jniLibs.srcDirs = ['src/main/jniLibs']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api project(":basemodule")
}
